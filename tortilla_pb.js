// source: tortilla.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var stream_pb = require('./stream_pb.js');
goog.object.extend(proto, stream_pb);
var ops_pb = require('./ops_pb.js');
goog.object.extend(proto, ops_pb);
goog.exportSymbol('proto.ProgramGraph', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProgramGraph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ProgramGraph.repeatedFields_, null);
};
goog.inherits(proto.ProgramGraph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProgramGraph.displayName = 'proto.ProgramGraph';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ProgramGraph.repeatedFields_ = [2,11,12,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProgramGraph.prototype.toObject = function(opt_includeInstance) {
  return proto.ProgramGraph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProgramGraph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProgramGraph.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operatorsList: jspb.Message.toObjectList(msg.getOperatorsList(),
    ops_pb.Operation.toObject, includeInstance),
    refStreamsList: jspb.Message.toObjectList(msg.getRefStreamsList(),
    stream_pb.RefStream.toObject, includeInstance),
    crdStreamsList: jspb.Message.toObjectList(msg.getCrdStreamsList(),
    stream_pb.CrdStream.toObject, includeInstance),
    valStreamsList: jspb.Message.toObjectList(msg.getValStreamsList(),
    stream_pb.ValStream.toObject, includeInstance),
    repsigStreamsList: jspb.Message.toObjectList(msg.getRepsigStreamsList(),
    stream_pb.RepSigStream.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProgramGraph}
 */
proto.ProgramGraph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProgramGraph;
  return proto.ProgramGraph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProgramGraph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProgramGraph}
 */
proto.ProgramGraph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new ops_pb.Operation;
      reader.readMessage(value,ops_pb.Operation.deserializeBinaryFromReader);
      msg.addOperators(value);
      break;
    case 11:
      var value = new stream_pb.RefStream;
      reader.readMessage(value,stream_pb.RefStream.deserializeBinaryFromReader);
      msg.addRefStreams(value);
      break;
    case 12:
      var value = new stream_pb.CrdStream;
      reader.readMessage(value,stream_pb.CrdStream.deserializeBinaryFromReader);
      msg.addCrdStreams(value);
      break;
    case 13:
      var value = new stream_pb.ValStream;
      reader.readMessage(value,stream_pb.ValStream.deserializeBinaryFromReader);
      msg.addValStreams(value);
      break;
    case 14:
      var value = new stream_pb.RepSigStream;
      reader.readMessage(value,stream_pb.RepSigStream.deserializeBinaryFromReader);
      msg.addRepsigStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProgramGraph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProgramGraph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProgramGraph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProgramGraph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      ops_pb.Operation.serializeBinaryToWriter
    );
  }
  f = message.getRefStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      stream_pb.RefStream.serializeBinaryToWriter
    );
  }
  f = message.getCrdStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      stream_pb.CrdStream.serializeBinaryToWriter
    );
  }
  f = message.getValStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      stream_pb.ValStream.serializeBinaryToWriter
    );
  }
  f = message.getRepsigStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      stream_pb.RepSigStream.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ProgramGraph.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProgramGraph.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Operation operators = 2;
 * @return {!Array<!proto.Operation>}
 */
proto.ProgramGraph.prototype.getOperatorsList = function() {
  return /** @type{!Array<!proto.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, ops_pb.Operation, 2));
};


/**
 * @param {!Array<!proto.Operation>} value
 * @return {!proto.ProgramGraph} returns this
*/
proto.ProgramGraph.prototype.setOperatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Operation}
 */
proto.ProgramGraph.prototype.addOperators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Operation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearOperatorsList = function() {
  return this.setOperatorsList([]);
};


/**
 * repeated RefStream ref_streams = 11;
 * @return {!Array<!proto.RefStream>}
 */
proto.ProgramGraph.prototype.getRefStreamsList = function() {
  return /** @type{!Array<!proto.RefStream>} */ (
    jspb.Message.getRepeatedWrapperField(this, stream_pb.RefStream, 11));
};


/**
 * @param {!Array<!proto.RefStream>} value
 * @return {!proto.ProgramGraph} returns this
*/
proto.ProgramGraph.prototype.setRefStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.RefStream=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RefStream}
 */
proto.ProgramGraph.prototype.addRefStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.RefStream, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearRefStreamsList = function() {
  return this.setRefStreamsList([]);
};


/**
 * repeated CrdStream crd_streams = 12;
 * @return {!Array<!proto.CrdStream>}
 */
proto.ProgramGraph.prototype.getCrdStreamsList = function() {
  return /** @type{!Array<!proto.CrdStream>} */ (
    jspb.Message.getRepeatedWrapperField(this, stream_pb.CrdStream, 12));
};


/**
 * @param {!Array<!proto.CrdStream>} value
 * @return {!proto.ProgramGraph} returns this
*/
proto.ProgramGraph.prototype.setCrdStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.CrdStream=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CrdStream}
 */
proto.ProgramGraph.prototype.addCrdStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.CrdStream, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearCrdStreamsList = function() {
  return this.setCrdStreamsList([]);
};


/**
 * repeated ValStream val_streams = 13;
 * @return {!Array<!proto.ValStream>}
 */
proto.ProgramGraph.prototype.getValStreamsList = function() {
  return /** @type{!Array<!proto.ValStream>} */ (
    jspb.Message.getRepeatedWrapperField(this, stream_pb.ValStream, 13));
};


/**
 * @param {!Array<!proto.ValStream>} value
 * @return {!proto.ProgramGraph} returns this
*/
proto.ProgramGraph.prototype.setValStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ValStream=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValStream}
 */
proto.ProgramGraph.prototype.addValStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ValStream, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearValStreamsList = function() {
  return this.setValStreamsList([]);
};


/**
 * repeated RepSigStream repsig_streams = 14;
 * @return {!Array<!proto.RepSigStream>}
 */
proto.ProgramGraph.prototype.getRepsigStreamsList = function() {
  return /** @type{!Array<!proto.RepSigStream>} */ (
    jspb.Message.getRepeatedWrapperField(this, stream_pb.RepSigStream, 14));
};


/**
 * @param {!Array<!proto.RepSigStream>} value
 * @return {!proto.ProgramGraph} returns this
*/
proto.ProgramGraph.prototype.setRepsigStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.RepSigStream=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RepSigStream}
 */
proto.ProgramGraph.prototype.addRepsigStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.RepSigStream, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProgramGraph} returns this
 */
proto.ProgramGraph.prototype.clearRepsigStreamsList = function() {
  return this.setRepsigStreamsList([]);
};


goog.object.extend(exports, proto);
